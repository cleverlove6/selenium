# 1.抓取单页，利用requests请求目标站点，得到单个网页html代码，返回结果
# 2.正则表达式的解析，根据html代码分析得到电影的名称，主演，上映时间，评分，图片链接的信息
# 3.保存至文件，通过文件的形式，将结果保存，每个一部电影一个结果，一行的json数据
# 4.开启循环，对多页的内容进行便利，开启多线程提高抓取速度


import requests
import json
from requests.exceptions import RequestException
import re

def get_one_page(url):
    try:
        # 需要加一层异常处理，
        response = requests.get(url)

        # 一般通过状态码进行判断的，
        if response.status_code == 200:
            return response.text
        return None
        # 如果反应成功了，那么就打印，不成功，返回none
    except RequestException:
        return None

# 数据进行解析
def parse_one_page(html):
    # 通过compile函数，使用正则表达式一个字符串，编译生成一个正则表达式的·对象
    # pattern = re.compile('<i.*?name">.*?href="(.*?)".*?releasetime:>(.*?)</p>', re.S)
    pattern = re.compile('<dd>.*?board-index.*?>(\d+)</i>',re.S)
    # pattern = re.compile('<dd>.*?class="board-index.*?">(\d+)</i>.*?<img.*?alt="(.*?).*?src="(.*?)".*?star">(.*?)</p>.*?releasetime">(.*?)</p>',re.S)
    pattern = re.compile('<dd>.*?board-index.*?>(\d+).*?src="(.*?)".*?name".*?>(.*?)</a>.*?star">.*?realeasetime">(.*?)</p>.*?score">.*?integer">(.*?)</i>.*?fraction">(.*?)</i>.*?</dd>')

    items = re.findall(pattern,html)

    #items = re.search('<a.*?href="(.*?)".*?</a>',html,re.S)

    #items = re.findall('<a.*?href="(.*?)".*?</a>',html)

    #items = re.match('<a.*?href="(.*?)".*?</a>',html,re.S)

    print(items)

    # for item in items:
    #     yield {
    #         "index":item[0],
    #         "image":item[1],
    #         "title":item[2],
    #         "actor":item[3].strip()[3:],
    #         "time" :item[4].strip()[5:],
    #         'score':item[5]+item[6]
    #     }

# def write_to_file(content):
#     with open('result.txt','a',encoding="utf-8") as f:
#         # content 抓取下来的数据是字典类型，需要转换成字符串的形式
#         f.write(json.dumps(content,ensure_ascii=False) + '\n')
#         f.close()

def main():
    url = "http://maoyan.com/board"
    html = get_one_page(url)
    parse_one_page(html)
    # for item in parse_one_page(html):
    #     print(item)
    #     write_to_file(item)


if __name__ == '__main__':
    main()

